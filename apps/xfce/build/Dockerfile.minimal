# syntax=docker/dockerfile:1.4
ARG BASE_APP_IMAGE

# hadolint ignore=DL3006
FROM ${BASE_APP_IMAGE}

ARG DEBIAN_FRONTEND=noninteractive

# Essential packages only - following Wolf/GOW patterns
ARG CORE_PACKAGES=" \
    dbus-x11 \
    firefox \
    flatpak \
    sudo \
    gnome-keyring \
    libsecret-1-0 \
    seahorse \
    "

ARG DE_PACKAGES=" \
    xfce4 \
    xfce4-settings \
    xubuntu-default-settings \
    xubuntu-icon-theme \
    papirus-icon-theme \
    arc-theme \
    at-spi2-core \
    thunar \
    thunar-volman \
    xfce4-terminal \
    xfce4-taskmanager \
    mousepad \
    "

# Essential development tools only
ARG DEV_PACKAGES=" \
    build-essential \
    git \
    vim \
    nano \
    htop \
    curl \
    wget \
    software-properties-common \
    apt-transport-https \
    ca-certificates \
    gnupg2 \
    "

# 
# Prevent firefox snap
COPY scripts/ff-unsnap /etc/apt/preferences.d/ff-unsnap

RUN \
    # Setup repositories \
    apt-get update && \
    apt-get install -y --no-install-recommends software-properties-common gpg-agent && \
    # Add Firefox PPA \
    add-apt-repository -y ppa:mozillateam/ppa && \
    # Add Microsoft GPG key and repository for VS Code \
    wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg && \
    install -o root -g root -m 644 packages.microsoft.gpg /etc/apt/trusted.gpg.d/ && \
    echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/trusted.gpg.d/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" > /etc/apt/sources.list.d/vscode.list && \
    # Add Google Chrome repository \
    wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | gpg --dearmor -o /usr/share/keyrings/googlechrome-keyring.gpg && \
    echo "deb [arch=amd64 signed-by=/usr/share/keyrings/googlechrome-keyring.gpg] https://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list && \
    # Update package lists \
    apt-get update && \
    # Install packages \
    apt-get install -y --no-install-recommends $CORE_PACKAGES $DE_PACKAGES $DEV_PACKAGES

# Install applications in separate layer
RUN \
    # Install Visual Studio Code \
    apt-get install -y code && \
    # Install Google Chrome \
    apt-get install -y google-chrome-stable && \
    # Install Steam \
    dpkg --add-architecture i386 && \
    apt-get update && \
    apt-get install -y steam-installer

# Install Unity Hub
RUN \
    # Download and install Unity Hub \
    wget -qO unity-hub.AppImage https://public-cdn.cloud.unity3d.com/hub/prod/UnityHub.AppImage && \
    chmod +x unity-hub.AppImage && \
    mv unity-hub.AppImage /opt/unity-hub && \
    # Create Unity Hub desktop entry \
    mkdir -p /usr/share/applications && \
    echo '[Desktop Entry]\n\
Name=Unity Hub\n\
Comment=Unity development environment\n\
Exec=/opt/unity-hub --no-sandbox\n\
Icon=unity-hub\n\
Terminal=false\n\
Type=Application\n\
Categories=Development;' > /usr/share/applications/unity-hub.desktop

# Setup directories and user permissions
RUN \
    # Ensure retro user exists \
    id retro || useradd -m -s /bin/bash retro && \
    # Create directory structure \
    mkdir -p /mnt/Wolf/Projects /mnt/Wolf/Unity /mnt/Wolf/Downloads /mnt/Wolf/Documents && \
    mkdir -p /opt/gow/scripts && \
    # Setup user permissions \
    chown -R retro:retro /mnt/Wolf 2>/dev/null || true

# Cleanup
RUN \
    # Remove xscreensaver \
    rm -f /etc/xdg/autostart/xscreensaver.desktop && \
    # Clean up \
    apt-get remove -y software-properties-common gpg-agent && \
    apt-get autoremove -y && \
    apt-get clean && \
    rm -rf \
        /var/lib/apt/lists/* \
        /var/tmp/* \
        /tmp/* \
        packages.microsoft.gpg

# Copy scripts and configurations
COPY --chmod=777 scripts/launch-comp.sh /opt/gow/launch-comp.sh
COPY --chmod=777 scripts/startup.sh /opt/gow/startup-app.sh
COPY --chmod=777 scripts/startdbus.sh /opt/gow/startdbus
COPY --chmod=755 scripts/create-desktop-shortcuts.sh /opt/gow/scripts/create-desktop-shortcuts.sh
COPY --chmod=755 scripts/keyring-session-init.sh /opt/gow/scripts/keyring-session-init.sh

# Copy autostart configuration
COPY --chmod=644 configs/autostart/keyring-session-init.desktop /etc/xdg/autostart/keyring-session-init.desktop

# Include default xfce config
COPY --chmod=777 scripts/xfce4 /opt/gow/xfce4

# Fix ownership after copy
RUN chown -R retro:retro /opt/gow/xfce4 2>/dev/null || true

# Fix locals
COPY scripts/locale /etc/default/locale

# Allow retro user sudo access
RUN echo "\nretro ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers && \
    echo "\nALL ALL=NOPASSWD: /opt/gow/startdbus" >> /etc/sudoers

# Fix bwrap permissions for flatpaks
RUN chmod u+s /usr/bin/bwrap

# Set environment
ENV XDG_RUNTIME_DIR=/tmp/.X11-unix

ARG IMAGE_SOURCE
LABEL org.opencontainers.image.source=$IMAGE_SOURCE
LABEL org.opencontainers.image.title="Enhanced XFCE Development Environment"
LABEL org.opencontainers.image.description="XFCE desktop with essential development tools for Wolf streaming"
