name: Build XFCE Container (Manual)

on:
  workflow_dispatch:
    inputs:
      push_to_registry:
        description: 'Push to GitHub Container Registry'
        type: boolean
        default: true
      image_tag:
        description: 'Image tag'
        type: string
        default: 'latest'
      use_existing_base:
        description: 'Use existing base images (skip rebuilding base/base-app)'
        type: boolean
        default: false
      base_app_image:
        description: 'Base app image to use (if using existing)'
        type: string
        default: 'ghcr.io/games-on-whales/base-app:edge'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/gow/xfce

jobs:
  build-base-images:
    if: ${{ inputs.use_existing_base != true }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      base-image: ${{ steps.base-tag.outputs.image }}
      base-app-image: ${{ steps.base-app-tag.outputs.image }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set base image tag
        id: base-tag
        run: echo "image=${{ env.REGISTRY }}/${{ github.repository_owner }}/gow/base:${{ inputs.image_tag }}" >> $GITHUB_OUTPUT

      - name: Build and push base image
        id: base
        uses: docker/build-push-action@v5
        with:
          context: ./images/base/build
          platforms: linux/amd64
          push: ${{ inputs.push_to_registry }}
          tags: ${{ steps.base-tag.outputs.image }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Set base-app image tag  
        id: base-app-tag
        run: echo "image=${{ env.REGISTRY }}/${{ github.repository_owner }}/gow/base-app:${{ inputs.image_tag }}" >> $GITHUB_OUTPUT

      - name: Build and push base-app image
        id: base-app
        uses: docker/build-push-action@v5
        with:
          context: ./images/base-app/build
          platforms: linux/amd64
          push: ${{ inputs.push_to_registry }}
          tags: ${{ steps.base-app-tag.outputs.image }}
          build-args: |
            BASE_IMAGE=${{ steps.base-tag.outputs.image }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-xfce:
    runs-on: ubuntu-latest
    needs: [build-base-images]
    if: always() && (needs.build-base-images.result == 'success' || inputs.use_existing_base == true)
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine base app image
        id: base-app-image
        run: |
          if [ "${{ inputs.use_existing_base }}" == "true" ]; then
            echo "image=${{ inputs.base_app_image }}" >> $GITHUB_OUTPUT
          else
            echo "image=${{ needs.build-base-images.outputs.base-app-image }}" >> $GITHUB_OUTPUT
          fi

      - name: Build and push XFCE image
        uses: docker/build-push-action@v5
        with:
          context: ./apps/xfce/build
          platforms: linux/amd64
          push: ${{ inputs.push_to_registry }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.image_tag }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:edge
          build-args: |
            BASE_APP_IMAGE=${{ steps.base-app-image.outputs.image }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build summary
        run: |
          echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "### XFCE Container Built Successfully âœ…" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Image:** \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.image_tag }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Base App Image:** \`${{ steps.base-app-image.outputs.image }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Pushed to Registry:** ${{ inputs.push_to_registry }}" >> $GITHUB_STEP_SUMMARY
          echo "**Used Existing Base:** ${{ inputs.use_existing_base }}" >> $GITHUB_STEP_SUMMARY
