name: ðŸ’° Cost-Optimized XFCE Build

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Image tag'
        type: string
        default: 'latest'
      push_to_registry:
        description: 'Push to GitHub Container Registry'
        type: boolean
        default: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/gow/xfce

jobs:
  build-xfce-only:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        if: inputs.push_to_registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ inputs.image_tag }}
            type=raw,value=cost-optimized
          labels: |
            org.opencontainers.image.title=Cost-Optimized XFCE Desktop
            org.opencontainers.image.description=XFCE desktop with Unity Hub, VS Code, Chrome, Steam - built using upstream base images
            org.opencontainers.image.vendor=Games on Whales Fork
            org.opencontainers.image.source=https://github.com/${{ github.repository }}

      - name: Build and push XFCE image
        uses: docker/build-push-action@v5
        with:
          context: apps/xfce/build
          platforms: linux/amd64
          push: ${{ inputs.push_to_registry }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BASE_APP_IMAGE=ghcr.io/games-on-whales/base-app:edge
            IMAGE_SOURCE=https://github.com/${{ github.repository }}
          cache-from: type=gha,scope=xfce-cost-optimized
          cache-to: type=gha,mode=max,scope=xfce-cost-optimized

      - name: Generate summary
        run: |
          echo "## ðŸ’° Cost-Optimized XFCE Build Complete!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ðŸ“¦ Built Image:" >> $GITHUB_STEP_SUMMARY
          echo "- **Image:** \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.image_tag }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Base:** Uses upstream \`ghcr.io/games-on-whales/base-app:edge\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Cost:** Minimal - only builds XFCE layer" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ðŸŽ¯ Features Included:" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Unity Hub for game development" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Visual Studio Code with Copilot support" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Google Chrome browser" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Steam gaming platform" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… GNOME Keyring for credential storage" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Development tools (Git, Node.js, Python, .NET)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ðŸš€ Usage:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.image_tag }}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Wolf Config:**" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`toml" >> $GITHUB_STEP_SUMMARY
          echo "image = \"${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.image_tag }}\"" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
